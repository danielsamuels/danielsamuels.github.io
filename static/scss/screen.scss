$rem-base: 16;

// STRIP UNIT
// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);    
}

// CONVERT TO REM
@function convert-to-rem($value, $base-value: $rem-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}



*, *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

html, body, .container {
    min-height: 100%;
    height: 100%;
    width: 100%;
}

html {
    -ms-text-size-adjust: 100%;
    /* 4 */
    -webkit-text-size-adjust: 100%;
    /* 4 */
}

html, body {
    // Mobile
    font-size: 28%;

    @for $i from 1 through 14 {
        @media screen and (min-width: #{$i * 100}px) {
            font-size: #{(($i * 100) / 14 / 100) * 100%};
        }
    }
}

body {
    padding: rem-calc(30);
    font-family: "Helvetica", sans-serif;
}

a {
    color: #fff;
    text-decoration: none;

    &:hover {
        color: #accfcc;
    }
}

p {
    color: #fff;
    margin: 0;
    font-weight: bold;
    line-height: 1;

    .top & {
        font-size: rem-calc(95);
        margin-left: rem-calc(-4);
    }

    .bottom & {
        font-size: rem-calc(40);
    }
}

.container {
    position: relative;
    background: #171511;
    padding: rem-calc(20) rem-calc(30);
    min-height: rem-calc(600);
}

.highlight {
    color: #8a0917;
}

.bottom {
    position: absolute;
    bottom: rem-calc(30);
}
